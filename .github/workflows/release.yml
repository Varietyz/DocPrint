name: Release to PyPI and GitHub

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: DocPrint v${{ steps.version.outputs.VERSION }}
        body: |
          # DocPrint v${{ steps.version.outputs.VERSION }}
          
          ## Installation
          ```bash
          pip install docprint
          ```
          
          ## Features
          - Runtime markdown documentation generation
          - Smart caching with content deduplication
          - GitHub integration for automatic documentation sync
          - Thread-safe operations with atomic file writes
          - 15+ content formatters
          
          ## Quick Start
          ```python
          from docprint import docPrint
          docPrint('text', 'Status', 'Application started')
          ```
          
          See the reference guide for complete documentation.
        draft: false
        prerelease: false
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: twine upload dist/*